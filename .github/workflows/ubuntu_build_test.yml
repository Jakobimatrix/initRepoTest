name: C/C++ CI

on:
  push:
    branches:
      - main
      - dev
      - master
      - release
  pull_request:
    branches:
      - main
      - dev
      - master
      - release
    

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Install Environment
      run: |
        if [ -f initRepo/.environment ]; then
            source initRepo/.environment
        fi
        if [ -f .environment ]; then
            source .environment
        fi
        sudo apt-get update
        sudo apt-get install -y gcc-${GCC_VERSION} g++-${GCC_VERSION}
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100
        sudo apt-get update
        sudo apt-get install -y clang-${CLANG_VERSION} lld
        if ! command -v ld.lld &>/dev/null; then
          sudo ln -s /usr/bin/ld.lld-${CLANG_VERSION} /usr/bin/ld.lld
        fi
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION} 100
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 100
        sudo apt-get install -y clang-format-${CLANG_FORMAT_VERSION}
        sudo apt-get install -y clang-tidy-${CLANG_TIDY_VERSION}
        
        source ./initRepo/scripts/ensureToolVersion.sh
        ensure_tool_versioned clang-format "${CLANG_FORMAT_VERSION}"
        ensure_tool_versioned clang-tidy "${CLANG_TIDY_VERSION}"
        ensure_tool_versioned g++ "${GCC_VERSION}"
        ensure_tool_versioned gcc "${GCC_VERSION}"
        ensure_tool_versioned clang++ "${CLANG_VERSION}"
        ensure_tool_versioned clang "${CLANG_VERSION}"

        sudo apt install shellcheck -y

    - name: Check bash scripts
      run: ./initRepo/scripts/checkShellCheck.sh

    - name: Check clang-tidy
      run: ./initRepo/scripts/checkClangTidy.sh

    - name: Build and test with GCC
      run: ./initRepo/scripts/build.sh -c -d -t --compiler gcc

    - name: Build and test with Clang
      run: ./initRepo/scripts/build.sh -c -d -t --compiler clang

    - name: Build fuzzer with Clang
      run: ./initRepo/scripts/build.sh -d -f --compiler clang

    - name: Build release and test with GCC
      run: ./initRepo/scripts/build.sh -c -r -t --compiler gcc

    - name: Build release and test with Clang
      run: ./initRepo/scripts/build.sh -c -r -t --compiler clang

    - name: Build release fuzzer with Clang
      run: ./initRepo/scripts/build.sh -r -f --compiler clang

    - name: Check clang-format
      run: ./initRepo/scripts/checkClangFormat.sh
      
